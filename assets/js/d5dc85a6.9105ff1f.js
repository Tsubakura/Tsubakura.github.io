"use strict";(self.webpackChunktsubakura_github_io=self.webpackChunktsubakura_github_io||[]).push([[7321],{5680:(e,t,n)=>{n.d(t,{xA:()=>h,yg:()=>f});var r=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},h=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,h=a(e,["components","mdxType","originalType","parentName"]),p=u(n),d=o,f=p["".concat(i,".").concat(d)]||p[d]||g[d]||s;return n?r.createElement(f,l(l({ref:t},h),{},{components:n})):r.createElement(f,l({ref:t},h))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,l=new Array(s);l[0]=d;var a={};for(var i in t)hasOwnProperty.call(t,i)&&(a[i]=t[i]);a.originalType=e,a[p]="string"==typeof e?e:o,l[1]=a;for(var u=2;u<s;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6970:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>f,frontMatter:()=>s,metadata:()=>a,toc:()=>u});var r=n(8168),o=(n(6540),n(5680));const s={id:"m3s_final_fusedown",title:"M3S - Final Fusedown",sidebar_label:"Final Fusedown",hide_title:!1,hide_table_of_contents:!0,slug:"/savage/m3s/final_fusedown"},l=void 0,a={unversionedId:"savage/arcadion/m3s/m3s_final_fusedown",id:"savage/arcadion/m3s/m3s_final_fusedown",title:"M3S - Final Fusedown",description:"Brute Bomber will cast Final Fusedown, spawning bombs all over the arena while also turning all players into bombs themselves!",source:"@site/docs/savage/arcadion/m3s/final_fusedown.mdx",sourceDirName:"savage/arcadion/m3s",slug:"/savage/m3s/final_fusedown",permalink:"/savage/m3s/final_fusedown",draft:!1,tags:[],version:"current",frontMatter:{id:"m3s_final_fusedown",title:"M3S - Final Fusedown",sidebar_label:"Final Fusedown",hide_title:!1,hide_table_of_contents:!0,slug:"/savage/m3s/final_fusedown"},sidebar:"mySideBar",previous:{title:"Chain Deathmatch 1",permalink:"/savage/m3s/chain_deathmatch_1"},next:{title:"Fusefield",permalink:"/savage/m3s/fusefield"}},i={},u=[{value:"Final Fusedown",id:"final-fusedown",level:2}],h=(p="KittenAsset",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.yg)("div",e)});var p;const g={toc:u},d="wrapper";function f(e){let{components:t,...n}=e;return(0,o.yg)(d,(0,r.A)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"Brute Bomber will cast ",(0,o.yg)("strong",null,"Final Fusedown"),", spawning bombs all over the arena while also turning all players into bombs themselves!"),(0,o.yg)("h2",{id:"final-fusedown"},"Final Fusedown"),(0,o.yg)("p",null,"The goal of this mechanic is simple. All the bombs, including the players, have either a short fuse or a long fuse. Each player needs to resolve their bombs without being hit by another bomb, with each group taking turns to resolve the bomb mechanic. The fuse assignments are role based, so all supports will get either long or short fuses, while the DPS group gets the other fuse."),(0,o.yg)("p",null,"Identify immediately where the lone long fuse bomb is, which is now the new north. The lone long fuse bomb can spawn either northeast or southwest, so there's only two possible spawn patterns that you have to check for. "),(0,o.yg)("table",{width:"80%"},(0,o.yg)("tr",null,(0,o.yg)("th",null,"Northeast is new north"),(0,o.yg)("th",null,"Southwest is new north")),(0,o.yg)("tr",null,(0,o.yg)("td",null,(0,o.yg)(h,{path:"m3s/final_fusedown_pattern1.png",mdxType:"KittenAsset"})),(0,o.yg)("td",null,(0,o.yg)(h,{path:"m3s/final_fusedown_pattern2.png",mdxType:"KittenAsset"})))),(0,o.yg)("p",null,"Once you have identified the new north, identify whether your role group is the short fuse or the long fuse."),(0,o.yg)("table",{width:"80%"},(0,o.yg)("tr",null,(0,o.yg)("th",null,"Long fuse"),(0,o.yg)("th",null,"Short fuse")),(0,o.yg)("tr",null,(0,o.yg)("td",null,(0,o.yg)(h,{path:"m3s/final_fusedown_long_fuse.png",mdxType:"KittenAsset"})),(0,o.yg)("td",null,(0,o.yg)(h,{path:"m3s/final_fusedown_short_fuse.png",mdxType:"KittenAsset"})))),(0,o.yg)("p",null,"The short fuse group should immediately get into their spread position to resolve their short bombs. The role group with the long fuse should get to the center, slightly away from where the short bombs are, in order to not get hit by any stray bombs that goes off. Once the short fuse bombs have exploded, the long fuse group should now make use of the space that is left behind by the short bombs to resolve their long fuse bombs."),(0,o.yg)("table",null,(0,o.yg)("tr",null,(0,o.yg)("th",null,"Supports short fuse",(0,o.yg)("br",null),"DPS long fuse"),(0,o.yg)("th",null,"DPS short fuse",(0,o.yg)("br",null),"Supports long fuse")),(0,o.yg)("tr",null,(0,o.yg)("td",null,(0,o.yg)(h,{path:"m3s/final_fusedown_support_short_part1.png",mdxType:"KittenAsset"})),(0,o.yg)("td",null,(0,o.yg)(h,{path:"m3s/final_fusedown_dps_short_part1.png",mdxType:"KittenAsset"}))),(0,o.yg)("tr",null,(0,o.yg)("td",null,(0,o.yg)(h,{path:"m3s/final_fusedown_support_short_part2.png",mdxType:"KittenAsset"})),(0,o.yg)("td",null,(0,o.yg)(h,{path:"m3s/final_fusedown_dps_short_part2.png",mdxType:"KittenAsset"}))),(0,o.yg)("tr",null,(0,o.yg)("td",null,(0,o.yg)(h,{path:"m3s/final_fusedown_support_short_example.gif",mdxType:"KittenAsset"})),(0,o.yg)("td",null,(0,o.yg)(h,{path:"m3s/final_fusedown_dps_short_example.gif",mdxType:"KittenAsset"})))),(0,o.yg)("p",null,"This mechanic is not uptime friendly for melees and excessive greeding will endanger your party members, so there's no shame in throwing a few ranged attacks instead in order for the party to not wipe in this mechanic."),(0,o.yg)("p",null,"Once all the bombs are resolved, the boss will use either ",(0,o.yg)("strong",null,"Octoboom Dive")," or ",(0,o.yg)("strong",null,"Quadroom Dive"),". Identify whether his arms are on fire and anti-knockback/gapclose as necessary in order to resolve the spread/two-man stack mechanic."))}f.isMDXComponent=!0}}]);